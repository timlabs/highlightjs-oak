/*! `oak` grammar compiled for Highlight.js 11.9.0 */
var hljsGrammar=(()=>{"use strict";function e(e){
return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e
}return e((e=>{const t=e.regex;return{case_insensitive:!0,
contains:[e.QUOTE_STRING_MODE,e.HASH_COMMENT_MODE,e.COMMENT(/\/#/,/#\//,{
contains:["self"]}),{scope:"built_in",
match:t.concat(/\b/,t.either(/for (all|any|each|every) meta/,/for (all|any|at least one|at most one|each|every|no|some)/,/there (are|exist|exists|is)( (an|a|at least one|at most one|no|some))?/,/at least one/,/at most one/,/every/,/some/,/no/,/is( not)?( (a|an))?/,/and/,/any/,/define/,/if/,/iff/,/implies/,/in/,/let/,/not/,/of/,/on/,/or/,/such that/,/then/,/where/,/with/),/\b/)
},{scope:"keyword",
match:t.concat(/\b/,t.either(/assume/,/axiom/,/begin assume/,/by/,/end/,/exit/,/from/,/include/,/marker/,/now/,/proof/,/schema/,/so/,/suppose/,/take/,/tie-in/),/\b/)
},{scope:"literal",
match:t.concat(/\b/,t.either(/contradiction/,/false/,/free/,/thesis/,/true/),/\b/)
}]}}))})();export default hljsGrammar;