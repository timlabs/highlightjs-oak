/*! `oak` grammar compiled for Highlight.js 11.5.0 */
(()=>{var e=(()=>{"use strict";return e=>{const t=e.regex;return{
case_insensitive:!0,
contains:[e.QUOTE_STRING_MODE,e.HASH_COMMENT_MODE,e.COMMENT(/\/#/,/#\//,{
contains:["self"]}),{scope:"built_in",
match:t.concat(/\b/,t.either(/for (all|any|each|every) meta/,/for (all|any|at least one|at most one|each|every|no|some)/,/there (are|exist|exists|is)( (an|a|at least one|at most one|no|some))?/,/at least one/,/at most one/,/every/,/some/,/no/,/is( not)?( (a|an))?/,/and/,/any/,/define/,/if/,/iff/,/implies/,/in/,/let/,/not/,/of/,/on/,/or/,/such that/,/then/,/where/,/with/),/\b/)
},{scope:"keyword",
match:t.concat(/\b/,t.either(/assume/,/axiom/,/begin assume/,/by/,/end/,/exit/,/from/,/include/,/now/,/proof/,/schema/,/so/,/suppose/,/take/,/tie-in/),/\b/)
},{scope:"literal",
match:t.concat(/\b/,t.either(/contradiction/,/false/,/free/,/thesis/,/true/),/\b/)
}]}}})();hljs.registerLanguage("oak",e)})();